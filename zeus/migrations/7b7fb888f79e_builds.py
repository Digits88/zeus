"""builds

Revision ID: 7b7fb888f79e
Revises: 7a64e52eb23d
Create Date: 2017-07-03 15:34:56.720482

"""
import zeus
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7b7fb888f79e'
down_revision = '7a64e52eb23d'
branch_labels = ()
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'author',
        sa.Column('id', zeus.db.types.GUID(), nullable=False),
        sa.Column('name', sa.String(length=128), nullable=False),
        sa.Column('email', sa.String(length=128), nullable=True),
        sa.Column('date_created', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email')
    )
    op.create_table(
        'repository',
        sa.Column('id', zeus.db.types.GUID(), nullable=False),
        sa.Column('url', sa.String(length=200), nullable=False),
        sa.Column('backend', zeus.db.types.Enum(), nullable=False),
        sa.Column('status', zeus.db.types.Enum(), nullable=False),
        sa.Column('date_created', sa.DateTime(), nullable=False),
        sa.Column('data', zeus.db.types.JSONEncodedDict(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('url')
    )
    op.create_table(
        'patch',
        sa.Column('id', zeus.db.types.GUID(), nullable=False),
        sa.Column('repository_id', zeus.db.types.GUID(), nullable=False),
        sa.Column('parent_revision_sha', sa.String(length=40), nullable=False),
        sa.Column('diff', sa.Text(), nullable=False),
        sa.Column('date_created', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ['repository_id'], ['repository.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_repo_sha', 'patch', [
                    'repository_id', 'parent_revision_sha'], unique=False)
    op.create_table(
        'revision',
        sa.Column('repository_id', zeus.db.types.GUID(), nullable=False),
        sa.Column('sha', sa.String(length=40), nullable=False),
        sa.Column('author_id', zeus.db.types.GUID(), nullable=True),
        sa.Column('committer_id', zeus.db.types.GUID(), nullable=True),
        sa.Column('message', sa.Text(), nullable=True),
        sa.Column('parents', postgresql.ARRAY(
            sa.String(length=40)), nullable=True),
        sa.Column('branches', postgresql.ARRAY(
            sa.String(length=128)), nullable=True),
        sa.Column('date_created', sa.DateTime(), nullable=True),
        sa.Column('date_committed', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['author_id'], ['author.id'], ),
        sa.ForeignKeyConstraint(['committer_id'], ['author.id'], ),
        sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], ),
        sa.PrimaryKeyConstraint('repository_id', 'sha')
    )
    op.create_index('idx_revision_author', 'revision',
                    ['author_id'], unique=False)
    op.create_index('idx_revision_committer', 'revision',
                    ['committer_id'], unique=False)
    op.create_table(
        'source',
        sa.Column('id', zeus.db.types.GUID(), nullable=False),
        sa.Column('repository_id', zeus.db.types.GUID(), nullable=False),
        sa.Column('patch_id', zeus.db.types.GUID(), nullable=True),
        sa.Column('revision_sha', sa.String(length=40), nullable=False),
        sa.Column('date_created', sa.DateTime(), nullable=False),
        sa.Column('data', zeus.db.types.JSONEncodedDict(), nullable=True),
        sa.ForeignKeyConstraint(['patch_id'], ['patch.id'], ),
        sa.ForeignKeyConstraint(['repository_id', 'revision_sha'], [
                                'revision.repository_id', 'revision.sha'], ),
        sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('patch_id'),
        sa.UniqueConstraint('repository_id', 'revision_sha',
                            'patch_id', name='unq_source_revision')
    )
    op.create_index('idx_source_patch', 'source', ['patch_id'], unique=False)
    op.create_index('idx_source_repo_sha', 'source', [
                    'repository_id', 'revision_sha'], unique=False)
    op.create_table(
        'build',
        sa.Column('id', zeus.db.types.GUID(), nullable=False),
        sa.Column('repository_id', zeus.db.types.GUID(), nullable=False),
        sa.Column('source_id', zeus.db.types.GUID(), nullable=False),
        sa.Column('status', zeus.db.types.Enum(), nullable=False),
        sa.Column('result', zeus.db.types.Enum(), nullable=False),
        sa.Column('date_started', sa.DateTime(), nullable=True),
        sa.Column('date_finished', sa.DateTime(), nullable=True),
        sa.Column('date_created', sa.DateTime(), nullable=False),
        sa.Column('data', zeus.db.types.JSONEncodedDict(), nullable=True),
        sa.ForeignKeyConstraint(
            ['repository_id'], ['repository.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['source_id'], ['source.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_build_repository_id', 'build',
                    ['repository_id'], unique=False)
    op.create_index('idx_build_source_id', 'build',
                    ['source_id'], unique=False)
    op.create_table(
        'job',
        sa.Column('id', zeus.db.types.GUID(), nullable=False),
        sa.Column('build_id', zeus.db.types.GUID(), nullable=False),
        sa.Column('status', zeus.db.types.Enum(), nullable=False),
        sa.Column('result', zeus.db.types.Enum(), nullable=False),
        sa.Column('date_started', sa.DateTime(), nullable=True),
        sa.Column('date_finished', sa.DateTime(), nullable=True),
        sa.Column('date_created', sa.DateTime(), nullable=False),
        sa.Column('data', zeus.db.types.JSONEncodedDict(), nullable=True),
        sa.ForeignKeyConstraint(
            ['build_id'], ['build.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_job_build_id', 'job', ['build_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_job_build_id', table_name='job')
    op.drop_table('job')
    op.drop_index('idx_build_source_id', table_name='build')
    op.drop_index('idx_build_repository_id', table_name='build')
    op.drop_table('build')
    op.drop_index('idx_source_repo_sha', table_name='source')
    op.drop_index('idx_source_patch', table_name='source')
    op.drop_table('source')
    op.drop_index('idx_revision_committer', table_name='revision')
    op.drop_index('idx_revision_author', table_name='revision')
    op.drop_table('revision')
    op.drop_index('idx_repo_sha', table_name='patch')
    op.drop_table('patch')
    op.drop_table('repository')
    op.drop_table('author')
    # ### end Alembic commands ###
